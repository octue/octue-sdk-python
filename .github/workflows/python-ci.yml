# This workflow will install Python dependencies, run tests and lint with a variety of Python versions.
#
# On successful test, the package will be published. For candidate releases, the package will be
#  published to test.pypi.org server (to ensure the process works). For merges to master, the
#  package will be published live.

name: python-ci

on:
  push:
    branches-ignore:
      - main

jobs:
  check-semantic-version:
    if: "!contains(github.event.head_commit.message, 'skipci')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Set fetch-depth to 0 to fetch all tags (necessary for git-mkver to determine the correct semantic version).
          fetch-depth: 0
      - uses: actions/setup-python@v2
      - name: Install git-mkver
        run: |
          curl -L https://github.com/idc101/git-mkver/releases/download/v1.2.1/git-mkver-linux-amd64-1.2.1.tar.gz \
          | tar xvz \
          && sudo mv git-mkver /usr/local/bin
      - name: Install semantic version checker
        run: pip install git+https://github.com/octue/conventional-commits
      - name: Check version
        run: check-semantic-version pyproject.toml

  run-tests:
    if: "!contains(github.event.head_commit.message, 'skipci')"
    runs-on: ${{ matrix.os }}
    env:
      USING_COVERAGE: "3.8"
    strategy:
      matrix:
        python: [3.8]
        os: [ubuntu-latest, windows-latest, macos-latest]
    permissions:
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Check pyproject.toml file
        run: poetry check

      - name: Install tox
        run: pip install tox

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v0.6.0
        with:
          # NOTE: If setting create_credentials_file=true, .dockerignore file must include `gha-creds-*.json` to avoid baking these credentials into build
          create_credentials_file: true
          workload_identity_provider: 'projects/481503880524/locations/global/workloadIdentityPools/github-actions-pool-2/providers/github-actions-provider-2'
          service_account: 'gha-sdk-python@octue-amy.iam.gserviceaccount.com'

      - name: Run tests
        env:
          TEST_PROJECT_NAME: ${{ secrets.TEST_PROJECT_NAME }}
          GOOGLE_CLOUD_PROJECT: ${{ secrets.TEST_PROJECT_NAME }}
        run: tox -vv -e py

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  test-publish:
    if: "!contains(github.event.head_commit.message, 'skipci')"
    runs-on: ubuntu-latest
    needs: [check-semantic-version, run-tests]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Test package is publishable with PyPI test server
        uses: JRubics/poetry-publish@v1.10
        with:
          python_version: "3.8"
          pypi_token: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_name: "testpypi"
          repository_url: "https://test.pypi.org/legacy/"
          ignore_dev_requirements: "yes"
