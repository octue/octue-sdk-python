[tool.poetry]
name = "octue"
version = "0.62.1"
description = "A package providing template applications for data services, and a python SDK to the Octue API."
readme = "README.md"
authors = ["Marcus Lugg <marcus@octue.com>", "Thomas Clark <support@octue.com>"]
license = "MIT"
repository = "https://www.github.com/octue/octue-sdk-python"
packages = [{ include = "octue"}]
keywords = ["digital", "twins", "twined", "data", "services", "science", "api", "apps", "ml"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = "^3.10"
click = ">=7,<9"
coolname = "^2"
google-auth = ">=1.27.0,<3"
google-cloud-pubsub = "^2.5"
google-cloud-secret-manager = "^2.20"
google-cloud-storage = ">=1.35.1, <3"
google-crc32c = "^1.1"
python-dateutil = "^2.8"
pyyaml = "^6"
h5py = { version = "^3.6", optional = true }
twined = "0.6.0"
packaging = ">=20.4"
google-cloud-bigquery = "^3.18.0"
pydash = "^8.0.4"
grpcio = "^1.71.0"

[tool.poetry.extras]
hdf5 = ["h5py"]

[tool.poetry.scripts]
octue = "octue.cli:octue_cli"

[tool.poetry.group.dev.dependencies]
# Testing
gcp-storage-emulator = "2022.06.11"
pytest = "^7"
tox = "^3.23"
# Code quality
pre-commit = "^2.17"
coverage = "^5"
# Template app dependencies
numpy = "^2.2.1"
pandas = "^2.2.3"
dateparser = "1.1.1"
stringcase = "1.2.0"
# Documentation
Sphinx = ">=5,<8"
sphinx-rtd-theme = ">=1,<2"
sphinx-tabs = ">=3.4.0,<4"
sphinx-toolbox = "^3"
ruff = "^0.6.9"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
# Enable pydocstyle (`D`), pycodestyle (`E`), and Pyflakes (`F`) codes.
select = ["D", "E", "F"]
# Ignore E501 line-too-long - see https://docs.astral.sh/ruff/faq/#is-the-ruff-linter-compatible-with-black for why
ignore = [
    "D100", "D101", "D102", "D103", "D104", "D105", "D107", "D203", "D205", "D213", "D400", "D415",
    "E501", "E203", "E731",
    "F405",
    "N818",
]

[tool.ruff.lint.isort]
known-first-party = ["octue", "app", "fractal", "test", "tests", "twined"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
force-sort-within-sections = true


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
