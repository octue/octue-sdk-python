// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.187.0/containers/python-3
{
  "name": "Python 3",
  "build": {
    "dockerfile": "Dockerfile",
    "context": ".."
  },
  // Set *default* container specific settings.json values on container create.
  "settings": {
    "austin.mode": "Wall time",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "jupyter.widgetScriptSources": ["jsdelivr.com", "unpkg.com"],
    "prettier.prettierPath": "/usr/local/prettier",
    "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
    "python.formatting.blackPath": "/usr/local/py-utils/bin/black",
    "python.formatting.provider": "black",
    "python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
    "python.languageServer": "Pylance",
    "python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
    "python.linting.enabled": true,
    "python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
    "python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
    "python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
    "python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
    // Line length to match black settings
    // Disabling specific messages:
    //  - To find the details do: /usr/local/py-utils/bin/pylint --list-msgs
    //  - Disable missing-module-docstring (C0114) because we don't document modules routinely, just their members
    //  - Disable invalid-name (C0103) because pylint thinks that eg 'x', 'df', 'np' are invalid due to their lengths
    "python.linting.pylintArgs": [
      "--max-line-length=120",
      "--disable=missing-module-docstring,invalid-name"
    ],
    "python.linting.pylintEnabled": true,
    "python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
    "python.pythonPath": "/usr/local/bin/python",
    "terminal.integrated.defaultProfile.linux": "zsh"
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "esbenp.prettier-vscode",
    "irongeek.vscode-env",
    "mikestead.dotenv",
    "ms-python.python",
    "ms-python.vscode-pylance",
    "ms-toolsai.jupyter",
    "ms-toolsai.jupyter-renderers",
    "ms-toolsai.jupyter-keymap",
    "ms-vsliveshare.vsliveshare",
    "p403n1x87.austin-vscode",
    "ritwickdey.liveserver"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [80, 443, 7045, 7046, 7047, 7048, 7049, 8080],

  // Use 'postCreateCommand' to run commands after the container is created
  // TODO update this to install all extras once https://github.com/python-poetry/poetry/issues/3413 is solved
  "postCreateCommand": "poetry install --extras hdf5 --extras dataflow",

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",

  // Allow ptrace based debuggers (like austin) to work in the container
  "runArgs": [
    "--env-file",
    "${localWorkspaceFolder}/.env",
    "--cap-add=SYS_PTRACE",
    "--security-opt",
    "seccomp=unconfined"
  ],

  // Mount gcloud configuration directory
  "mounts": [
    "source=${localEnv:HOME}${localEnv:USERPROFILE}/.config/gcloud,target=/gcp/config,type=bind,consistency=cached"
  ]
}
